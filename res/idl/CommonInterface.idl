module Server {
    module CommonObjects {
        typedef sequence<string> StringSequence;

        struct User {
            string userId;
            string displayName;
            string password;
            string userType;
        };

        struct GameRules {
            long timeToGuess;        // Time in seconds for each turn
            long maxRounds;         // Maximum number of rounds
            long maxGuesses;         // Maximum wrong guesses allowed
            long minPlayers;        // Minimum players required to start
            long maxPlayers;         // Maximum players allowed in a lobby
        };

        struct GameResult {
            string sessionId;
            string winner;
            StringSequence players;
            long roundsPlayed;
            long totalGuessesMade;
            long duration;           // Game duration in seconds
        };

        struct LobbyInfo {
            string lobbyId;
            string hostName;
            long currentPlayers;
            long maxPlayers;
            boolean isPrivate;
            boolean gameStarted;
        };
    };

    module CommonInterface {
        interface CallBackInterface {
            void receivePing(in string client_id);
            void heartbeat();

            // Game-related callbacks
            void updatePlayerList(in CommonObjects::StringSequence players);
            void gameStarted();
            void yourTurn();
            void wordToGuess(in string wordWithBlanks); // e.g., "H _ N G M _ N"
            void guessResult(in boolean correct, in char letter);
            void gameEnded(in CommonObjects::GameResult result);
        };
    };
};